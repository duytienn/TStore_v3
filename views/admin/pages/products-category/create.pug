extends ../../layouts/default.pug
include ../../mixins/alert.pug
include ../../mixins/select-tree.pug

block main
  +alert-error()

  if(role.permissions.includes("product-category_create"))
    h1(class="mb-4") Thêm mới sản phẩm 

    form(
      action=`${prefixAdmin}/products-category/create`
      id="form-create-product"
      method="POST"
      enctype="multipart/form-data"
    )
      div(class="form-group" style="width: 95%")
        label(for="title") Tiêu đề
        input(
          type="text"
          id="title"
          name="title"
          class="form-control"
          required
        ) 
      div(class="form-group" style="width: 95%")
        label(for="code") Mã danh mục
        input(
          type="text"
          id="code"
          name="code"
          class="form-control"
          placeholder="Nhập mã danh mục (ví dụ: DT)"
          required
        )
        small(class="form-text text-muted") Mã danh mục sẽ được tự động in hoa.
      div(class="form-group" style="width: 95%")
        label(for="paren_id") Danh mục cha
        select(
          name="paren_id"
          id="paren_id"
          class="form-control"
          data-parent-code
        )
          option(value="") -- Không có danh mục cha --
          +select-tree(records)
      div(class="form-group" style="width: 95%")
        label(for="full_code_preview") Mã đầy đủ
        input(
          type="text"
          id="full_code_preview"
          class="form-control"
          readonly
          disabled
        )
        small(class="form-text text-muted") Mã đầy đủ sẽ được tự động tạo dựa trên mã danh mục cha (nếu có) và mã danh mục.
      div(class="form-group" style="width: 95%")
        label(for="desc") Mô tả 
        textarea(
          class="form-control tinymce-textarea"
          id="desc"
          name="description"
          rows="5"
        ) 
      div(class="form-group" style="width: 95%")
        label(for="thumbnail") Ảnh
        input(
          type="file"
          class="form-control-file"
          id="thumbnail"
          name="thumbnail"
          accept="image/*"
          choose-img
        )
        img(src="", alt="your-image" preview-img)
        div(remove-preview class="hidden-remove") Bỏ chọn
      div(class="form-group" style="width: 95%")
        label(for="position") Vị trí
        input(
          type="number"
          class="form-control"
          id="position"
          name="position"
          placeholder="Tự động tăng"
          min="1"
        )
      div(class="form-group form-check form-check-inline")
        input(
          type="radio"
          class="form-check-input"
          id="statusActive"
          name="status"
          value="active"
          checked
        )
        label(for="statusActive" class="form-check-label") Hoạt động
      div(class="form-group form-check form-check-inline")
        input(
          type="radio"
          class="form-check-input"
          id="statusInActive"
          name="status"
          value="inactive"
        ) 
        label(for="statusInActive" class="form-check-label") Dừng hoạt động
      div(class="form-group")
        button(
          type="submit"
          class="btn btn-primary"
        ) Tạo mới

  script(src="/admin/js/products.js")
  script.
    // JavaScript để xử lý hiển thị mã đầy đủ
    document.addEventListener('DOMContentLoaded', function() {
      const codeInput = document.getElementById('code');
      const parentSelect = document.getElementById('paren_id');
      const fullCodePreview = document.getElementById('full_code_preview');
      
      // Hàm cập nhật xem trước mã đầy đủ
      function updateFullCodePreview() {
        const code = codeInput.value.toUpperCase();
        const parentId = parentSelect.value;
        
        if (parentId) {
          // Lấy text của option đang được chọn
          const selectedOption = parentSelect.options[parentSelect.selectedIndex];
          // Lấy mã danh mục cha từ data attribute
          const parentCode = selectedOption.getAttribute('data-code') || '';
          fullCodePreview.value = parentCode + code;
        } else {
          fullCodePreview.value = code;
        }
      }
      
      // Cập nhật khi thay đổi mã hoặc danh mục cha
      codeInput.addEventListener('input', updateFullCodePreview);
      parentSelect.addEventListener('change', updateFullCodePreview);
      
      // Cập nhật ban đầu
      updateFullCodePreview();
      
      // Thêm kiểm tra trùng mã danh mục
      const form = document.getElementById('form-create-product');

      // Hàm kiểm tra mã danh mục
      async function checkCategoryCode() {
        const code = codeInput.value.trim();
        const parentId = parentSelect.value;

        if (!code) return true;

        try {
          const response = await fetch(`${prefixAdmin}/products-category/api/check-code?code=${code}&parentId=${parentId}`);
          const data = await response.json();

          if (!data.available) {
            alert('Mã danh mục này đã tồn tại. Vui lòng nhập mã khác.');
            codeInput.focus();
            return false;
          }
          return true;
        } catch (error) {
          console.error('Error checking category code:', error);
          return true; // Cho phép tiếp tục nếu lỗi
        }
      }

      // Kiểm tra khi submit form
      if (form) {
        form.addEventListener('submit', async function(event) {
          // Ngăn form submit mặc định
          event.preventDefault();

          // Kiểm tra mã
          const isCodeValid = await checkCategoryCode();

          // Nếu mã hợp lệ, cho phép submit form
          if (isCodeValid) {
            this.submit();
          }
        });
      }

      // Kiểm tra khi người dùng nhập xong mã
      codeInput.addEventListener('blur', checkCategoryCode);

      // Kiểm tra khi người dùng thay đổi danh mục cha
      parentSelect.addEventListener('change', checkCategoryCode);
    });